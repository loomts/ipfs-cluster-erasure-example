- name: Copy IPFS from local to remote
  when: not ansible_check_mode
  become: true
  copy:
    src: "{{ ipfs_executable_path }}"
    dest: "/usr/local/bin/ipfs"

- name: Set IPFS executable permissions for root
  become: true
  file:
    path: "/usr/local/bin/ipfs"
    owner: root
    group: root
    mode: 0755

- name: Install ipfs systemd init service
  become: true
  template:
    src: etc/systemd/system/ipfs.service
    dest: /etc/systemd/system/ipfs.service
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload systemd
    - Restart IPFS
  when:
    - not (ansible_distribution == "Amazon" and ansible_distribution_major_version == "NA")
    - not (ansible_distribution == "Ubuntu" and ansible_distribution_version is version('15.04', '<'))
    - not (ansible_distribution == "Debian" and ansible_distribution_version is version('8', '<'))

- name: Install ipfs init service
  become: true
  template:
    src: etc/init.d/ipfs
    dest: /etc/init.d/ipfs
    owner: root
    group: root
    mode: 0744
  notify:
    - Restart IPFS
  when:
    - (ansible_distribution == "Amazon" and ansible_distribution_major_version == "NA") or
      (ansible_distribution == "Ubuntu" and ansible_distribution_version is version('15.04', '<')) or
      (ansible_distribution == "Debian" and ansible_distribution_version is version('8', '<'))

- name: Make ipfs group
  become: true
  group:
    state: present
    name: ipfs

- name: Make ipfs user
  become: true
  user:
    state: present
    name: ipfs
    group: ipfs
    shell: /bin/bash
    home: "{{ ipfs_home }}"
    comment: IPFS user
    system: true

- name: Copy default config
  become: true
  template:
    src: home/ipfs/ipfs_default_config
    dest: "{{ ipfs_home }}/ipfs_default_config"
    owner: ipfs
    group: ipfs
    mode: 0644
  tags:
    - clean and restart

- name: Set environment variables
  become: true
  become_user: ipfs
  lineinfile:
    path: "~/.bashrc"
    line: "alias dctl='ipfs-cluster-ctl' && alias dservice='ipfs-cluster-service' && alias dfollow='ipfs-cluster-follow' && export LIBP2P_FORCE_PNET=1"
    state: present

- name: Init IPFS
  become: true
  become_user: ipfs
  command: ipfs init --empty-repo -- {{ ipfs_home }}/ipfs_default_config
  args:
    creates: "{{ ipfs_home }}/.ipfs/config"
  notify: Restart IPFS
  tags:
    - clean and restart

- name: Copy swarm key
  become: true
  template:
    src: home/ipfs/swarm.key
    dest: "{{ ipfs_home }}/.ipfs/swarm.key"
    owner: ipfs
    group: ipfs
    mode: 0644
  tags:
    - clean and restart

- name: Set up ssh public key
  become: true
  become_user: ipfs
  authorized_key:
    user: ipfs
    state: present
    key: "{{ lookup('file', '/home/loomt/.ssh/id_rsa.pub') }}"
  tags:
    - ssh

- name: Set version file (to notify restart on upgrades)
  become: true
  copy:
    content: "{{ ipfs_version }}"
    dest: "{{ ipfs_home }}/ipfs_deployed_version"
    mode: 0644
    owner: ipfs
    group: ipfs
  notify: Restart IPFS

